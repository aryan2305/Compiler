State 38 conflicts: 5 shift/reduce
State 50 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header_files global_declaration_list main_function

    2 header_files: HEADER header_files
    3             | %empty

    4 global_declaration_list: global_declaration_list global_declaration
    5                        | %empty

    6 global_declaration: variable_declaration
    7                   | func_declaration

    8 variable_declaration: data_type_var variable_list SEMI

    9 variable_list: variable_list COMMA variable
   10              | variable

   11 variable: name
   12         | name ASSIGN arithmetic_expr

   13 func_declaration: data_type_func ID_NOT_MAIN LB arguments_list RB LCB statements RCB

   14 arguments_list: argument
   15               | argument COMMA arguments_list

   16 argument: data_type_var name
   17         | %empty

   18 data_type_var: INT
   19              | FLOAT

   20 data_type_func: INT
   21               | FLOAT
   22               | VOID

   23 name: ID

   24 value: NUM_FP
   25      | NUM_INT

   26 main_function: data_type_func MAIN LB RB LCB statements RCB

   27 statements: expression statements
   28           | %empty

   29 expression: variable_declaration
   30           | read_input
   31           | print_output
   32           | conditional_expr
   33           | looping_expr
   34           | return_expr
   35           | conditions SEMI
   36           | BREAK SEMI
   37           | CONTINUE SEMI
   38           | LCB expression RCB

   39 read_input: GET LB name RB SEMI

   40 print_output: PUT LB name RB SEMI
   41             | PUT LB value RB SEMI

   42 conditional_expr: if_expr
   43                 | switch_expr

   44 if_expr: IF LB conditions RB LCB statements RCB
   45        | IF LB conditions RB LCB statements RCB ELSE LCB statements RCB

   46 switch_expr: SWITCH LB name RB LCB switch_cases RCB

   47 switch_cases: CASE value COLON statements switch_cases
   48             | CASE value COLON statements
   49             | DEFAULT COLON statements

   50 looping_expr: for_expr
   51             | while_expr

   52 for_expr: FOR LB variable_list SEMI conditions SEMI variable_list RB LCB statements RCB

   53 while_expr: WHILE LB conditions RB LCB statements RCB

   54 conditions: variable EQ conditions
   55           | logical_expr

   56 logical_expr: logical_expr OR and_expr
   57             | and_expr

   58 and_expr: relation_expr AND and_expr
   59         | relation_expr

   60 relation_expr: arithmetic_expr op1 relation_expr
   61              | arithmetic_expr

   62 arithmetic_expr: div_mul_expr op2 arithmetic_expr
   63                | div_mul_expr

   64 div_mul_expr: div_mul_expr op3 unary_expr
   65             | unary_expr

   66 unary_expr: op2 term
   67           | term

   68 term: LB conditions RB
   69     | NOT term
   70     | variable
   71     | value
   72     | function_calls

   73 function_calls: name LB fc_argument_list RB

   74 fc_argument_list: arithmetic_expr COMMA fc_argument_list
   75                 | arithmetic_expr
   76                 | %empty

   77 op1: LT
   78    | GT
   79    | LTEQ
   80    | GTEQ
   81    | EQ
   82    | NEQ

   83 op2: PLUS
   84    | MINUS

   85 op3: MULT
   86    | DIVIDE
   87    | MOD

   88 return_expr: RETURN SEMI
   89            | RETURN value SEMI


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    LT <node> (258) 77
    GT <node> (259) 78
    LTEQ <node> (260) 79
    GTEQ <node> (261) 80
    EQ <node> (262) 54 81
    NEQ <node> (263) 82
    AND <node> (264) 58
    OR <node> (265) 56
    NOT <node> (266) 69
    ASSIGN <node> (267) 12
    PLUS <node> (268) 83
    MINUS <node> (269) 84
    DIVIDE <node> (270) 86
    MULT <node> (271) 85
    MOD <node> (272) 87
    SEMI <node> (273) 8 35 36 37 39 40 41 52 88 89
    COLON <node> (274) 47 48 49
    COMMA <node> (275) 9 15 74
    LB <node> (276) 13 26 39 40 41 44 45 46 52 53 68 73
    RB <node> (277) 13 26 39 40 41 44 45 46 52 53 68 73
    LCB <node> (278) 13 26 38 44 45 46 52 53
    RCB <node> (279) 13 26 38 44 45 46 52 53
    INT <node> (280) 18 20
    FLOAT <node> (281) 19 21
    VOID <node> (282) 22
    HEADER <node> (283) 2
    NUM_INT <node> (284) 25
    NUM_FP <node> (285) 24
    ID <node> (286) 23
    MAIN <node> (287) 26
    FOR <node> (288) 52
    WHILE <node> (289) 53
    IF <node> (290) 44 45
    ELSE <node> (291) 45
    SWITCH <node> (292) 46
    CASE <node> (293) 47 48
    RETURN <node> (294) 88 89
    GET <node> (295) 39
    PUT <node> (296) 40 41
    BREAK <node> (297) 36
    CONTINUE <node> (298) 37
    DEFAULT <node> (299) 49
    ID_NOT_MAIN <node> (300) 13


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program <node> (47)
        on left: 1
        on right: 0
    header_files <node> (48)
        on left: 2 3
        on right: 1 2
    global_declaration_list <node> (49)
        on left: 4 5
        on right: 1 4
    global_declaration <node> (50)
        on left: 6 7
        on right: 4
    variable_declaration <node> (51)
        on left: 8
        on right: 6 29
    variable_list <node> (52)
        on left: 9 10
        on right: 8 9 52
    variable <node> (53)
        on left: 11 12
        on right: 9 10 54 70
    func_declaration <node> (54)
        on left: 13
        on right: 7
    arguments_list <node> (55)
        on left: 14 15
        on right: 13 15
    argument <node> (56)
        on left: 16 17
        on right: 14 15
    data_type_var <node> (57)
        on left: 18 19
        on right: 8 16
    data_type_func <node> (58)
        on left: 20 21 22
        on right: 13 26
    name <node> (59)
        on left: 23
        on right: 11 12 16 39 40 46 73
    value <node> (60)
        on left: 24 25
        on right: 41 47 48 71 89
    main_function <node> (61)
        on left: 26
        on right: 1
    statements <node> (62)
        on left: 27 28
        on right: 13 26 27 44 45 47 48 49 52 53
    expression <node> (63)
        on left: 29 30 31 32 33 34 35 36 37 38
        on right: 27 38
    read_input <node> (64)
        on left: 39
        on right: 30
    print_output <node> (65)
        on left: 40 41
        on right: 31
    conditional_expr <node> (66)
        on left: 42 43
        on right: 32
    if_expr <node> (67)
        on left: 44 45
        on right: 42
    switch_expr <node> (68)
        on left: 46
        on right: 43
    switch_cases <node> (69)
        on left: 47 48 49
        on right: 46 47
    looping_expr <node> (70)
        on left: 50 51
        on right: 33
    for_expr <node> (71)
        on left: 52
        on right: 50
    while_expr <node> (72)
        on left: 53
        on right: 51
    conditions <node> (73)
        on left: 54 55
        on right: 35 44 45 52 53 54 68
    logical_expr <node> (74)
        on left: 56 57
        on right: 55 56
    and_expr <node> (75)
        on left: 58 59
        on right: 56 57 58
    relation_expr <node> (76)
        on left: 60 61
        on right: 58 59 60
    arithmetic_expr <node> (77)
        on left: 62 63
        on right: 12 60 61 62 74 75
    div_mul_expr <node> (78)
        on left: 64 65
        on right: 62 63 64
    unary_expr <node> (79)
        on left: 66 67
        on right: 64 65
    term <node> (80)
        on left: 68 69 70 71 72
        on right: 66 67 69
    function_calls <node> (81)
        on left: 73
        on right: 72
    fc_argument_list <node> (82)
        on left: 74 75 76
        on right: 73 74
    op1 <node> (83)
        on left: 77 78 79 80 81 82
        on right: 60
    op2 <node> (84)
        on left: 83 84
        on right: 62 66
    op3 <node> (85)
        on left: 85 86 87
        on right: 64
    return_expr <node> (86)
        on left: 88 89
        on right: 34


State 0

    0 $accept: . program $end

    HEADER  shift, and go to state 1

    $default  reduce using rule 3 (header_files)

    program       go to state 2
    header_files  go to state 3


State 1

    2 header_files: HEADER . header_files

    HEADER  shift, and go to state 1

    $default  reduce using rule 3 (header_files)

    header_files  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: header_files . global_declaration_list main_function

    $default  reduce using rule 5 (global_declaration_list)

    global_declaration_list  go to state 6


State 4

    2 header_files: HEADER header_files .

    $default  reduce using rule 2 (header_files)


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: header_files global_declaration_list . main_function
    4 global_declaration_list: global_declaration_list . global_declaration

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    VOID   shift, and go to state 9

    global_declaration    go to state 10
    variable_declaration  go to state 11
    func_declaration      go to state 12
    data_type_var         go to state 13
    data_type_func        go to state 14
    main_function         go to state 15


State 7

   18 data_type_var: INT .
   20 data_type_func: INT .

    ID        reduce using rule 18 (data_type_var)
    $default  reduce using rule 20 (data_type_func)


State 8

   19 data_type_var: FLOAT .
   21 data_type_func: FLOAT .

    ID        reduce using rule 19 (data_type_var)
    $default  reduce using rule 21 (data_type_func)


State 9

   22 data_type_func: VOID .

    $default  reduce using rule 22 (data_type_func)


State 10

    4 global_declaration_list: global_declaration_list global_declaration .

    $default  reduce using rule 4 (global_declaration_list)


State 11

    6 global_declaration: variable_declaration .

    $default  reduce using rule 6 (global_declaration)


State 12

    7 global_declaration: func_declaration .

    $default  reduce using rule 7 (global_declaration)


State 13

    8 variable_declaration: data_type_var . variable_list SEMI

    ID  shift, and go to state 16

    variable_list  go to state 17
    variable       go to state 18
    name           go to state 19


State 14

   13 func_declaration: data_type_func . ID_NOT_MAIN LB arguments_list RB LCB statements RCB
   26 main_function: data_type_func . MAIN LB RB LCB statements RCB

    MAIN         shift, and go to state 20
    ID_NOT_MAIN  shift, and go to state 21


State 15

    1 program: header_files global_declaration_list main_function .

    $default  reduce using rule 1 (program)


State 16

   23 name: ID .

    $default  reduce using rule 23 (name)


State 17

    8 variable_declaration: data_type_var variable_list . SEMI
    9 variable_list: variable_list . COMMA variable

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 18

   10 variable_list: variable .

    $default  reduce using rule 10 (variable_list)


State 19

   11 variable: name .
   12         | name . ASSIGN arithmetic_expr

    ASSIGN  shift, and go to state 24

    $default  reduce using rule 11 (variable)


State 20

   26 main_function: data_type_func MAIN . LB RB LCB statements RCB

    LB  shift, and go to state 25


State 21

   13 func_declaration: data_type_func ID_NOT_MAIN . LB arguments_list RB LCB statements RCB

    LB  shift, and go to state 26


State 22

    8 variable_declaration: data_type_var variable_list SEMI .

    $default  reduce using rule 8 (variable_declaration)


State 23

    9 variable_list: variable_list COMMA . variable

    ID  shift, and go to state 16

    variable  go to state 27
    name      go to state 19


State 24

   12 variable: name ASSIGN . arithmetic_expr

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 34
    name             go to state 35
    value            go to state 36
    arithmetic_expr  go to state 37
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 25

   26 main_function: data_type_func MAIN LB . RB LCB statements RCB

    RB  shift, and go to state 43


State 26

   13 func_declaration: data_type_func ID_NOT_MAIN LB . arguments_list RB LCB statements RCB

    INT    shift, and go to state 44
    FLOAT  shift, and go to state 45

    $default  reduce using rule 17 (argument)

    arguments_list  go to state 46
    argument        go to state 47
    data_type_var   go to state 48


State 27

    9 variable_list: variable_list COMMA variable .

    $default  reduce using rule 9 (variable_list)


State 28

   69 term: NOT . term

    NOT      shift, and go to state 28
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable        go to state 34
    name            go to state 35
    value           go to state 36
    term            go to state 49
    function_calls  go to state 41


State 29

   83 op2: PLUS .

    $default  reduce using rule 83 (op2)


State 30

   84 op2: MINUS .

    $default  reduce using rule 84 (op2)


State 31

   68 term: LB . conditions RB

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 50
    name             go to state 35
    value            go to state 36
    conditions       go to state 51
    logical_expr     go to state 52
    and_expr         go to state 53
    relation_expr    go to state 54
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 32

   25 value: NUM_INT .

    $default  reduce using rule 25 (value)


State 33

   24 value: NUM_FP .

    $default  reduce using rule 24 (value)


State 34

   70 term: variable .

    $default  reduce using rule 70 (term)


State 35

   11 variable: name .
   12         | name . ASSIGN arithmetic_expr
   73 function_calls: name . LB fc_argument_list RB

    ASSIGN  shift, and go to state 24
    LB      shift, and go to state 56

    $default  reduce using rule 11 (variable)


State 36

   71 term: value .

    $default  reduce using rule 71 (term)


State 37

   12 variable: name ASSIGN arithmetic_expr .

    $default  reduce using rule 12 (variable)


State 38

   62 arithmetic_expr: div_mul_expr . op2 arithmetic_expr
   63                | div_mul_expr .
   64 div_mul_expr: div_mul_expr . op3 unary_expr

    PLUS    shift, and go to state 29
    MINUS   shift, and go to state 30
    DIVIDE  shift, and go to state 57
    MULT    shift, and go to state 58
    MOD     shift, and go to state 59

    PLUS      [reduce using rule 63 (arithmetic_expr)]
    MINUS     [reduce using rule 63 (arithmetic_expr)]
    DIVIDE    [reduce using rule 63 (arithmetic_expr)]
    MULT      [reduce using rule 63 (arithmetic_expr)]
    MOD       [reduce using rule 63 (arithmetic_expr)]
    $default  reduce using rule 63 (arithmetic_expr)

    op2  go to state 60
    op3  go to state 61


State 39

   65 div_mul_expr: unary_expr .

    $default  reduce using rule 65 (div_mul_expr)


State 40

   67 unary_expr: term .

    $default  reduce using rule 67 (unary_expr)


State 41

   72 term: function_calls .

    $default  reduce using rule 72 (term)


State 42

   66 unary_expr: op2 . term

    NOT      shift, and go to state 28
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable        go to state 34
    name            go to state 35
    value           go to state 36
    term            go to state 62
    function_calls  go to state 41


State 43

   26 main_function: data_type_func MAIN LB RB . LCB statements RCB

    LCB  shift, and go to state 63


State 44

   18 data_type_var: INT .

    $default  reduce using rule 18 (data_type_var)


State 45

   19 data_type_var: FLOAT .

    $default  reduce using rule 19 (data_type_var)


State 46

   13 func_declaration: data_type_func ID_NOT_MAIN LB arguments_list . RB LCB statements RCB

    RB  shift, and go to state 64


State 47

   14 arguments_list: argument .
   15               | argument . COMMA arguments_list

    COMMA  shift, and go to state 65

    $default  reduce using rule 14 (arguments_list)


State 48

   16 argument: data_type_var . name

    ID  shift, and go to state 16

    name  go to state 66


State 49

   69 term: NOT term .

    $default  reduce using rule 69 (term)


State 50

   54 conditions: variable . EQ conditions
   70 term: variable .

    EQ  shift, and go to state 67

    EQ        [reduce using rule 70 (term)]
    $default  reduce using rule 70 (term)


State 51

   68 term: LB conditions . RB

    RB  shift, and go to state 68


State 52

   55 conditions: logical_expr .
   56 logical_expr: logical_expr . OR and_expr

    OR  shift, and go to state 69

    $default  reduce using rule 55 (conditions)


State 53

   57 logical_expr: and_expr .

    $default  reduce using rule 57 (logical_expr)


State 54

   58 and_expr: relation_expr . AND and_expr
   59         | relation_expr .

    AND  shift, and go to state 70

    $default  reduce using rule 59 (and_expr)


State 55

   60 relation_expr: arithmetic_expr . op1 relation_expr
   61              | arithmetic_expr .

    LT    shift, and go to state 71
    GT    shift, and go to state 72
    LTEQ  shift, and go to state 73
    GTEQ  shift, and go to state 74
    EQ    shift, and go to state 75
    NEQ   shift, and go to state 76

    $default  reduce using rule 61 (relation_expr)

    op1  go to state 77


State 56

   73 function_calls: name LB . fc_argument_list RB

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    $default  reduce using rule 76 (fc_argument_list)

    variable          go to state 34
    name              go to state 35
    value             go to state 36
    arithmetic_expr   go to state 78
    div_mul_expr      go to state 38
    unary_expr        go to state 39
    term              go to state 40
    function_calls    go to state 41
    fc_argument_list  go to state 79
    op2               go to state 42


State 57

   86 op3: DIVIDE .

    $default  reduce using rule 86 (op3)


State 58

   85 op3: MULT .

    $default  reduce using rule 85 (op3)


State 59

   87 op3: MOD .

    $default  reduce using rule 87 (op3)


State 60

   62 arithmetic_expr: div_mul_expr op2 . arithmetic_expr

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 34
    name             go to state 35
    value            go to state 36
    arithmetic_expr  go to state 80
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 61

   64 div_mul_expr: div_mul_expr op3 . unary_expr

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable        go to state 34
    name            go to state 35
    value           go to state 36
    unary_expr      go to state 81
    term            go to state 40
    function_calls  go to state 41
    op2             go to state 42


State 62

   66 unary_expr: op2 term .

    $default  reduce using rule 66 (unary_expr)


State 63

   26 main_function: data_type_func MAIN LB RB LCB . statements RCB

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 93
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 64

   13 func_declaration: data_type_func ID_NOT_MAIN LB arguments_list RB . LCB statements RCB

    LCB  shift, and go to state 105


State 65

   15 arguments_list: argument COMMA . arguments_list

    INT    shift, and go to state 44
    FLOAT  shift, and go to state 45

    $default  reduce using rule 17 (argument)

    arguments_list  go to state 106
    argument        go to state 47
    data_type_var   go to state 48


State 66

   16 argument: data_type_var name .

    $default  reduce using rule 16 (argument)


State 67

   54 conditions: variable EQ . conditions

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 50
    name             go to state 35
    value            go to state 36
    conditions       go to state 107
    logical_expr     go to state 52
    and_expr         go to state 53
    relation_expr    go to state 54
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 68

   68 term: LB conditions RB .

    $default  reduce using rule 68 (term)


State 69

   56 logical_expr: logical_expr OR . and_expr

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 34
    name             go to state 35
    value            go to state 36
    and_expr         go to state 108
    relation_expr    go to state 54
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 70

   58 and_expr: relation_expr AND . and_expr

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 34
    name             go to state 35
    value            go to state 36
    and_expr         go to state 109
    relation_expr    go to state 54
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 71

   77 op1: LT .

    $default  reduce using rule 77 (op1)


State 72

   78 op1: GT .

    $default  reduce using rule 78 (op1)


State 73

   79 op1: LTEQ .

    $default  reduce using rule 79 (op1)


State 74

   80 op1: GTEQ .

    $default  reduce using rule 80 (op1)


State 75

   81 op1: EQ .

    $default  reduce using rule 81 (op1)


State 76

   82 op1: NEQ .

    $default  reduce using rule 82 (op1)


State 77

   60 relation_expr: arithmetic_expr op1 . relation_expr

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 34
    name             go to state 35
    value            go to state 36
    relation_expr    go to state 110
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 78

   74 fc_argument_list: arithmetic_expr . COMMA fc_argument_list
   75                 | arithmetic_expr .

    COMMA  shift, and go to state 111

    $default  reduce using rule 75 (fc_argument_list)


State 79

   73 function_calls: name LB fc_argument_list . RB

    RB  shift, and go to state 112


State 80

   62 arithmetic_expr: div_mul_expr op2 arithmetic_expr .

    $default  reduce using rule 62 (arithmetic_expr)


State 81

   64 div_mul_expr: div_mul_expr op3 unary_expr .

    $default  reduce using rule 64 (div_mul_expr)


State 82

   38 expression: LCB . expression RCB

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    expression            go to state 113
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 83

   52 for_expr: FOR . LB variable_list SEMI conditions SEMI variable_list RB LCB statements RCB

    LB  shift, and go to state 114


State 84

   53 while_expr: WHILE . LB conditions RB LCB statements RCB

    LB  shift, and go to state 115


State 85

   44 if_expr: IF . LB conditions RB LCB statements RCB
   45        | IF . LB conditions RB LCB statements RCB ELSE LCB statements RCB

    LB  shift, and go to state 116


State 86

   46 switch_expr: SWITCH . LB name RB LCB switch_cases RCB

    LB  shift, and go to state 117


State 87

   88 return_expr: RETURN . SEMI
   89            | RETURN . value SEMI

    SEMI     shift, and go to state 118
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33

    value  go to state 119


State 88

   39 read_input: GET . LB name RB SEMI

    LB  shift, and go to state 120


State 89

   40 print_output: PUT . LB name RB SEMI
   41             | PUT . LB value RB SEMI

    LB  shift, and go to state 121


State 90

   36 expression: BREAK . SEMI

    SEMI  shift, and go to state 122


State 91

   37 expression: CONTINUE . SEMI

    SEMI  shift, and go to state 123


State 92

   29 expression: variable_declaration .

    $default  reduce using rule 29 (expression)


State 93

   26 main_function: data_type_func MAIN LB RB LCB statements . RCB

    RCB  shift, and go to state 124


State 94

   27 statements: expression . statements

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 125
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 95

   30 expression: read_input .

    $default  reduce using rule 30 (expression)


State 96

   31 expression: print_output .

    $default  reduce using rule 31 (expression)


State 97

   32 expression: conditional_expr .

    $default  reduce using rule 32 (expression)


State 98

   42 conditional_expr: if_expr .

    $default  reduce using rule 42 (conditional_expr)


State 99

   43 conditional_expr: switch_expr .

    $default  reduce using rule 43 (conditional_expr)


State 100

   33 expression: looping_expr .

    $default  reduce using rule 33 (expression)


State 101

   50 looping_expr: for_expr .

    $default  reduce using rule 50 (looping_expr)


State 102

   51 looping_expr: while_expr .

    $default  reduce using rule 51 (looping_expr)


State 103

   35 expression: conditions . SEMI

    SEMI  shift, and go to state 126


State 104

   34 expression: return_expr .

    $default  reduce using rule 34 (expression)


State 105

   13 func_declaration: data_type_func ID_NOT_MAIN LB arguments_list RB LCB . statements RCB

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 127
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 106

   15 arguments_list: argument COMMA arguments_list .

    $default  reduce using rule 15 (arguments_list)


State 107

   54 conditions: variable EQ conditions .

    $default  reduce using rule 54 (conditions)


State 108

   56 logical_expr: logical_expr OR and_expr .

    $default  reduce using rule 56 (logical_expr)


State 109

   58 and_expr: relation_expr AND and_expr .

    $default  reduce using rule 58 (and_expr)


State 110

   60 relation_expr: arithmetic_expr op1 relation_expr .

    $default  reduce using rule 60 (relation_expr)


State 111

   74 fc_argument_list: arithmetic_expr COMMA . fc_argument_list

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    $default  reduce using rule 76 (fc_argument_list)

    variable          go to state 34
    name              go to state 35
    value             go to state 36
    arithmetic_expr   go to state 78
    div_mul_expr      go to state 38
    unary_expr        go to state 39
    term              go to state 40
    function_calls    go to state 41
    fc_argument_list  go to state 128
    op2               go to state 42


State 112

   73 function_calls: name LB fc_argument_list RB .

    $default  reduce using rule 73 (function_calls)


State 113

   38 expression: LCB expression . RCB

    RCB  shift, and go to state 129


State 114

   52 for_expr: FOR LB . variable_list SEMI conditions SEMI variable_list RB LCB statements RCB

    ID  shift, and go to state 16

    variable_list  go to state 130
    variable       go to state 18
    name           go to state 19


State 115

   53 while_expr: WHILE LB . conditions RB LCB statements RCB

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 50
    name             go to state 35
    value            go to state 36
    conditions       go to state 131
    logical_expr     go to state 52
    and_expr         go to state 53
    relation_expr    go to state 54
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 116

   44 if_expr: IF LB . conditions RB LCB statements RCB
   45        | IF LB . conditions RB LCB statements RCB ELSE LCB statements RCB

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 50
    name             go to state 35
    value            go to state 36
    conditions       go to state 132
    logical_expr     go to state 52
    and_expr         go to state 53
    relation_expr    go to state 54
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 117

   46 switch_expr: SWITCH LB . name RB LCB switch_cases RCB

    ID  shift, and go to state 16

    name  go to state 133


State 118

   88 return_expr: RETURN SEMI .

    $default  reduce using rule 88 (return_expr)


State 119

   89 return_expr: RETURN value . SEMI

    SEMI  shift, and go to state 134


State 120

   39 read_input: GET LB . name RB SEMI

    ID  shift, and go to state 16

    name  go to state 135


State 121

   40 print_output: PUT LB . name RB SEMI
   41             | PUT LB . value RB SEMI

    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    name   go to state 136
    value  go to state 137


State 122

   36 expression: BREAK SEMI .

    $default  reduce using rule 36 (expression)


State 123

   37 expression: CONTINUE SEMI .

    $default  reduce using rule 37 (expression)


State 124

   26 main_function: data_type_func MAIN LB RB LCB statements RCB .

    $default  reduce using rule 26 (main_function)


State 125

   27 statements: expression statements .

    $default  reduce using rule 27 (statements)


State 126

   35 expression: conditions SEMI .

    $default  reduce using rule 35 (expression)


State 127

   13 func_declaration: data_type_func ID_NOT_MAIN LB arguments_list RB LCB statements . RCB

    RCB  shift, and go to state 138


State 128

   74 fc_argument_list: arithmetic_expr COMMA fc_argument_list .

    $default  reduce using rule 74 (fc_argument_list)


State 129

   38 expression: LCB expression RCB .

    $default  reduce using rule 38 (expression)


State 130

    9 variable_list: variable_list . COMMA variable
   52 for_expr: FOR LB variable_list . SEMI conditions SEMI variable_list RB LCB statements RCB

    SEMI   shift, and go to state 139
    COMMA  shift, and go to state 23


State 131

   53 while_expr: WHILE LB conditions . RB LCB statements RCB

    RB  shift, and go to state 140


State 132

   44 if_expr: IF LB conditions . RB LCB statements RCB
   45        | IF LB conditions . RB LCB statements RCB ELSE LCB statements RCB

    RB  shift, and go to state 141


State 133

   46 switch_expr: SWITCH LB name . RB LCB switch_cases RCB

    RB  shift, and go to state 142


State 134

   89 return_expr: RETURN value SEMI .

    $default  reduce using rule 89 (return_expr)


State 135

   39 read_input: GET LB name . RB SEMI

    RB  shift, and go to state 143


State 136

   40 print_output: PUT LB name . RB SEMI

    RB  shift, and go to state 144


State 137

   41 print_output: PUT LB value . RB SEMI

    RB  shift, and go to state 145


State 138

   13 func_declaration: data_type_func ID_NOT_MAIN LB arguments_list RB LCB statements RCB .

    $default  reduce using rule 13 (func_declaration)


State 139

   52 for_expr: FOR LB variable_list SEMI . conditions SEMI variable_list RB LCB statements RCB

    NOT      shift, and go to state 28
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    LB       shift, and go to state 31
    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33
    ID       shift, and go to state 16

    variable         go to state 50
    name             go to state 35
    value            go to state 36
    conditions       go to state 146
    logical_expr     go to state 52
    and_expr         go to state 53
    relation_expr    go to state 54
    arithmetic_expr  go to state 55
    div_mul_expr     go to state 38
    unary_expr       go to state 39
    term             go to state 40
    function_calls   go to state 41
    op2              go to state 42


State 140

   53 while_expr: WHILE LB conditions RB . LCB statements RCB

    LCB  shift, and go to state 147


State 141

   44 if_expr: IF LB conditions RB . LCB statements RCB
   45        | IF LB conditions RB . LCB statements RCB ELSE LCB statements RCB

    LCB  shift, and go to state 148


State 142

   46 switch_expr: SWITCH LB name RB . LCB switch_cases RCB

    LCB  shift, and go to state 149


State 143

   39 read_input: GET LB name RB . SEMI

    SEMI  shift, and go to state 150


State 144

   40 print_output: PUT LB name RB . SEMI

    SEMI  shift, and go to state 151


State 145

   41 print_output: PUT LB value RB . SEMI

    SEMI  shift, and go to state 152


State 146

   52 for_expr: FOR LB variable_list SEMI conditions . SEMI variable_list RB LCB statements RCB

    SEMI  shift, and go to state 153


State 147

   53 while_expr: WHILE LB conditions RB LCB . statements RCB

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 154
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 148

   44 if_expr: IF LB conditions RB LCB . statements RCB
   45        | IF LB conditions RB LCB . statements RCB ELSE LCB statements RCB

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 155
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 149

   46 switch_expr: SWITCH LB name RB LCB . switch_cases RCB

    CASE     shift, and go to state 156
    DEFAULT  shift, and go to state 157

    switch_cases  go to state 158


State 150

   39 read_input: GET LB name RB SEMI .

    $default  reduce using rule 39 (read_input)


State 151

   40 print_output: PUT LB name RB SEMI .

    $default  reduce using rule 40 (print_output)


State 152

   41 print_output: PUT LB value RB SEMI .

    $default  reduce using rule 41 (print_output)


State 153

   52 for_expr: FOR LB variable_list SEMI conditions SEMI . variable_list RB LCB statements RCB

    ID  shift, and go to state 16

    variable_list  go to state 159
    variable       go to state 18
    name           go to state 19


State 154

   53 while_expr: WHILE LB conditions RB LCB statements . RCB

    RCB  shift, and go to state 160


State 155

   44 if_expr: IF LB conditions RB LCB statements . RCB
   45        | IF LB conditions RB LCB statements . RCB ELSE LCB statements RCB

    RCB  shift, and go to state 161


State 156

   47 switch_cases: CASE . value COLON statements switch_cases
   48             | CASE . value COLON statements

    NUM_INT  shift, and go to state 32
    NUM_FP   shift, and go to state 33

    value  go to state 162


State 157

   49 switch_cases: DEFAULT . COLON statements

    COLON  shift, and go to state 163


State 158

   46 switch_expr: SWITCH LB name RB LCB switch_cases . RCB

    RCB  shift, and go to state 164


State 159

    9 variable_list: variable_list . COMMA variable
   52 for_expr: FOR LB variable_list SEMI conditions SEMI variable_list . RB LCB statements RCB

    COMMA  shift, and go to state 23
    RB     shift, and go to state 165


State 160

   53 while_expr: WHILE LB conditions RB LCB statements RCB .

    $default  reduce using rule 53 (while_expr)


State 161

   44 if_expr: IF LB conditions RB LCB statements RCB .
   45        | IF LB conditions RB LCB statements RCB . ELSE LCB statements RCB

    ELSE  shift, and go to state 166

    $default  reduce using rule 44 (if_expr)


State 162

   47 switch_cases: CASE value . COLON statements switch_cases
   48             | CASE value . COLON statements

    COLON  shift, and go to state 167


State 163

   49 switch_cases: DEFAULT COLON . statements

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 168
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 164

   46 switch_expr: SWITCH LB name RB LCB switch_cases RCB .

    $default  reduce using rule 46 (switch_expr)


State 165

   52 for_expr: FOR LB variable_list SEMI conditions SEMI variable_list RB . LCB statements RCB

    LCB  shift, and go to state 169


State 166

   45 if_expr: IF LB conditions RB LCB statements RCB ELSE . LCB statements RCB

    LCB  shift, and go to state 170


State 167

   47 switch_cases: CASE value COLON . statements switch_cases
   48             | CASE value COLON . statements

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 171
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 168

   49 switch_cases: DEFAULT COLON statements .

    $default  reduce using rule 49 (switch_cases)


State 169

   52 for_expr: FOR LB variable_list SEMI conditions SEMI variable_list RB LCB . statements RCB

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 172
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 170

   45 if_expr: IF LB conditions RB LCB statements RCB ELSE LCB . statements RCB

    NOT       shift, and go to state 28
    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    LB        shift, and go to state 31
    LCB       shift, and go to state 82
    INT       shift, and go to state 44
    FLOAT     shift, and go to state 45
    NUM_INT   shift, and go to state 32
    NUM_FP    shift, and go to state 33
    ID        shift, and go to state 16
    FOR       shift, and go to state 83
    WHILE     shift, and go to state 84
    IF        shift, and go to state 85
    SWITCH    shift, and go to state 86
    RETURN    shift, and go to state 87
    GET       shift, and go to state 88
    PUT       shift, and go to state 89
    BREAK     shift, and go to state 90
    CONTINUE  shift, and go to state 91

    $default  reduce using rule 28 (statements)

    variable_declaration  go to state 92
    variable              go to state 50
    data_type_var         go to state 13
    name                  go to state 35
    value                 go to state 36
    statements            go to state 173
    expression            go to state 94
    read_input            go to state 95
    print_output          go to state 96
    conditional_expr      go to state 97
    if_expr               go to state 98
    switch_expr           go to state 99
    looping_expr          go to state 100
    for_expr              go to state 101
    while_expr            go to state 102
    conditions            go to state 103
    logical_expr          go to state 52
    and_expr              go to state 53
    relation_expr         go to state 54
    arithmetic_expr       go to state 55
    div_mul_expr          go to state 38
    unary_expr            go to state 39
    term                  go to state 40
    function_calls        go to state 41
    op2                   go to state 42
    return_expr           go to state 104


State 171

   47 switch_cases: CASE value COLON statements . switch_cases
   48             | CASE value COLON statements .

    CASE     shift, and go to state 156
    DEFAULT  shift, and go to state 157

    $default  reduce using rule 48 (switch_cases)

    switch_cases  go to state 174


State 172

   52 for_expr: FOR LB variable_list SEMI conditions SEMI variable_list RB LCB statements . RCB

    RCB  shift, and go to state 175


State 173

   45 if_expr: IF LB conditions RB LCB statements RCB ELSE LCB statements . RCB

    RCB  shift, and go to state 176


State 174

   47 switch_cases: CASE value COLON statements switch_cases .

    $default  reduce using rule 47 (switch_cases)


State 175

   52 for_expr: FOR LB variable_list SEMI conditions SEMI variable_list RB LCB statements RCB .

    $default  reduce using rule 52 (for_expr)


State 176

   45 if_expr: IF LB conditions RB LCB statements RCB ELSE LCB statements RCB .

    $default  reduce using rule 45 (if_expr)
